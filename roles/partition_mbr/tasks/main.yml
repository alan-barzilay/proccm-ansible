---
# Esse role assume q a tabela de particao do cliente segue a seguinte logica (caso exista):
# MBR: sda1 /, sda2 swap, sda3 /scratch
# GPT: sda1 /boot/efi, sda2 /, sda3 swap, sda4 /scratch

- name: Mkdirs no /mnt pra dar mount
  become: true
  ansible.builtin.file:
    path: /mnt/archinstall/scratch
    state: directory
    mode: "0755"
    recurse: true # para criar dirs intermediarios, tipo mkdir -p

- name: Ler tabela de particao
  become: true
  community.general.parted:
    device: /dev/sda
    unit: 'MiB' # (always use unit when probing)
  register: sda_info

- name: Remove all partitions from disk
  become: true
  tags: [force, never]
  community.general.parted:
    state: absent
    device: /dev/sda
    number: '{{ item.num }}'
  loop: '{{ sda_info.partitions }}'


- name: MBR/BIOS - Criar nova tabela de particao
  become: true
  tags: mbr
  when: >
    sda_info.partitions | length != 3 or
    not ( sda_info.partitions[0]['fstype'] == 'ext4' and
          sda_info.partitions[1]['fstype'] == 'linux-swap' and
          sda_info.partitions[2]['fstype'] == 'ext4' )
    or 'force' and 'mbr' in ansible_run_tags
  community.general.parted:
    state: present
    device: /dev/sda
    number: "{{ item.number }}"
    fs_type: "{{ item.fs }}"
    part_start: "{{ item.part_start }}"
    part_end: "{{ item.part_end }}"
  register: criar_tabela_results
  loop: "{{ mbr_partitions }}"

# - name: UEFI/GPT - Criar nova tabela de particao
#   become: true
#   tags: 'uefi'
#   when: >
#    sda_info.partitions | length != 4 or
#    not ( sda_info.partitions[0]['fstype'] == 'fat32' and
#          sda_info.partitions[1]['fstype'] == 'ext4' and
#          sda_info.partitions[2]['fstype'] == 'linux-swap' and
#          sda_info.partitions[3]['fstype'] == 'ext4' )
#    or 'force' and 'uefi' in ansible_run_tags
#   community.general.parted:
#     state: present
#     device: /dev/sda
#   loop: "{{ gpt_partitions }}"


# TODO: N sei se formatar sda2 eh necessario ja q eh swap
# N formatar sda3 pq queremos manter scratch
- name: Formatar / & swap
  become: true
  community.general.filesystem:
    fstype: "{{ item.fstype }}"
    dev: "{{ item.dev }}"
  loop:
    - { fstype: "ext4", dev: "/dev/sda{{ root_partition }}" }
    - { fstype: "swap", dev: "/dev/sda{{ swap_partition }}" }

- name: Formatar /scratch
  become: true
  when: criar_tabela_results is defined
  community.general.filesystem:
    fstype: "ext4"
    dev: "/dev/sda{{ scratch_partition }}"

  # documentacao eh ruim mas no archinstall tem a opcao "pre-mount" que vai soh replicar
  # o q ele encontrar no /mnt/archinstall
- name: Mount / no /mnt/archinstall & /scratch no /mnt/archinstall/scratch
  become: true
  ansible.posix.mount:
    path: "{{ item.path }}"
    src: "{{ item.src }}"
    fstype: ext4
    state: mounted
  loop:
    - { path: "/mnt/archinstall", src: "/dev/sda{{ root_partition }}" }
    - { path: "/mnt/archinstall/scratch", src: "/dev/sda{{ scratch_partition }}" }
